<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAAjvQAAI70B2QQdQgAAETFJREFUeF7tXQl4FEUW
        joqKcl9JCBDIyZmEK+G+jwVvWHS9UFdEQF0QkXWVdfFaV8UVFHBVPvdDZRXv9UBEAWW9EBYFj0W8wmQO
        csz0XEnmztt6r2sQoZnpmczRne7/+/4vH8xMd9erv+q9qnpVnWGfVGFmdOnUJM0oANCpXaIAUAmSH+ps
        8XTpAtA2dQFonLoANE5dABqnLgCNUxeAxqkLQOPUBaBx6gLQOHUBaJy6ADROXQAapy4AjVMXgMapC0Dj
        1AWgceoC0Dh1AWicugA0Tl0AGqcuAI1TF4DGqQtA49QFoHFqSADjh4JQMQBspXlgK8oGa0EmWPO6grUP
        I/7NzwRbYTbYSvqAUN4f7OOGSF+nZbEFCmDyCKIwqhRsfXuAtXdnsPbqCLZBvelz56UXgHvx9VB/xy3Q
        cP9KaHjwXmj420qo//NycN+8EJyXXwT2qaOYUPLF3+Z2IsGgeMLXPuGe6mULEQBWypSRIIwcBLbi7lTh
        QsVAcC26BhoeuBs8zz4NgT2fQaimGuSgSbBBYP8X4H1xEzSsug/cSxaAfWK5KCTWcwjlLUYMKhcAq3T8
        S621ZwcQRpeB66qLofGp9RD8+UdenYlBqNoC3s3PgWvh1b+IYUAvsE8YfvQ5VEiVCoC3eFtJHvlvx4zx
        0PDwXyFUdZhXV3IRqq2GxsfXgOOi6eQebP16qrVHUKEApo6m7h1bPAZqnueeBvD5eNWkHr63XwfHzPGi
        2xlaTPGD5HMrkyoSAHazrIVZc7HrzYXGJ9dCk8vFqyHNCIXIPQjD+oE1px0bcQxTixBUIoBpY0AYzoyb
        eRa45l8JgW++4pZXFkJGA7iXL6beyTaoD9inj5Euj3KoAgEwI1rzuoFtYG9oXL+am1rZ8L70LxopoFuw
        Txut5NhAwQJAo7FulHw96/4De3dz86oDGJA6LpwG1uyzfynP8WVMPxUqADQWq3Rrj/bgZEZsqndzs6oP
        6LKOxgXKGy4qUADhyu/eFpxz5wA0NXFTJgnJvj6D+7YlYM1iPcEEJgJl9QQKFAB2+zms8q++mJsvMfDu
        2Q2uJ9aC9ab5UHvZLKiZfQ5UnzcVqs+ZDNXnToGaWTOh9tKLwLroWnCufgg8u3ZCk9fLf9181K9YxoLY
        1mIZlSMChQkAAz7s9i8+l5uteWh47WWw3XITVXBVz85wuE0GGDqdAVXZ7enfVbldoap3N/Ev/rt7BzB0
        PpN97xSoymoHRyaNAtviBVC/aSM0eTz8qvHDvXQR1GFPoJwhooIEgJWf2xkcM8YxYzdyk8WOpoZ6cP79
        AaieOQkOtz+NKr2qVxcwlxWDefhAMA8bEJ34vSH9wJiXBYfbsWucnQFHxrNnvHsFBKuP8DvFB+dlFzJ3
        0EYpQ0SFCID5fGFwIRvq5UKw8iduqtiBLdUyZhhUtmKVzlozVWb5oBMrOBaiGNg1sKeoPD0DzCWF4Fq/
        ht8xdjQJVrCPGwq2/j2V0BMoRAAThkNdt9bge+s1bqbYEDSbmV+fDZWn8tZeUSK/tcfCilIw5mdD5WkZ
        UD1jEvjjnJAKfL2fXB0uWac5HlCAAKaNpggZ1+fjgWfHe2BkrfNwh1ZiJSWj4o8l9QglFCsg3c88zZ8k
        Nng2rBfjgfQODdMsAKZ+7Pox2aLJ6eCmkQ8n64oNzM9jAEetXqrCkkXeG2B8IKxYzp8oNjgumCq6gvSJ
        IP09AE6S+Hds4yaRD/u9d0LlGRlgLOwB5hGl0pWUbDLRmQbkkUuwLV7In0w+Al99KU4X4ySRhG1SwDQK
        AMf7BZngnHMON4d8uB5/jAIyU/8+8lr+0P4ipT5rLlmAaCotgsozWU9w+zL+hPLhvnEeE0GndAWEaRTA
        eBYJF2VDYP8+bgp5aNz6Nhw+i7X84l7Slc9jAGN+dzB0OYuGgoYurVmMcDoYOp5O7gIrLKEuIyyCjAxw
        PbmeP6k8hCwmWjmkgFDKTsllmgSAU72s9btinO0LGqvA0OlMMPbJJB98QkUwV2Dsk0WTPZZxw8F6wzxW
        Ieug/uUXKFgT7riVZv+qcruxAK710SHeCdeJhygC7g68n33Mn1ge3DcvYKOCDunoBdIkAMypy+sKvm1b
        uAlkIBCAI9PGgaHr2dKtl/0fzt6hW8Ap3yb3yReQPB/totlBA+sVzIP7Jk4E+Aw9OoG5rAhC1jp+t+jA
        YSEFg2OHStsreUyPAISyAhYBT+HFlwfsWn9mXaxFovItrOVXZbUFy6ghEDSb+C+iQ/jjzeS7zUPZdRI0
        fLSMKIPKU1g8sHwJv4s8uBfPp17RPiml8wJpEADr/utY5F9/1x286NER+PlHmpY19WV+//iKwlaX0wFM
        gwoitvqToW7h71mc0Eq6V4mTppICMHRrA74v9vK7RIfnmQ1Ql3VWqoeEaRAAG/Lghg3s9uRCuPM2alWS
        w73BxWRsz38+5N+OHTjvj1O9ieoFMD7BngVjELkIVR8RN5+MLJG2W3KYegFgQqfr6kt4saMjWFtDrdtU
        3FPC2AOhKrMt1M45j387PqB7wZFFwmIBRnzmqp5dIPD9d/wu0VH/p6UUG0nZLUlMtQBGUIpXw0P38iJH
        h/PRhymyRj8vZejDbU8F9z+f4t+OD02NjdT6aWgpcY+4yFzK4dYZYFuyiN8lOnyvvSRODEnaLilMfQ+A
        BfRufpYXOTpqr5hDXbyUkdHXGgtywP/9If7t+GG94TqaN5C6T7zEuAWHo3LhZ8NHW78e4m4jCdslgSkW
        wNghIAwuguB3/+NFjgz/Tz+IwV9JobSBC3tQ5B9y2Pkv4odw+61g6MSGhRL3iZtsiGlgLsr7yUf8LpER
        sgtkJ4oFjrddcphaAeDCj2PWdFbSEC9yZDjXrabFlpP5ZmMRE8BoFEDsC0nHAyeJcKZQ6j5xk7kVTEgR
        Vt7O7xIdruvnir2AhP2SwNQKwFqYBe5b5PvEunlXijN2UsZlJBeQ3x38h+QHWicD5gLSJJPEfZpDnHqu
        njFRtugbV91H29Kl7JcEplgAuZ2g8dFVvKjRUX3+dKjq1VnSsERsYW1PiXn+/XiE3G7qro19c6Xv0wya
        +vUGU1mx7FQyz/PPkJ2k7JcEpl4A3uc38qJGBmbkHpk4klq4lGHDNGS1o4ze5sD1j8cSPgwM0zQwnyaw
        /Ae/5XeLDO8br4A1vxtNl0vZMMFMoQD4/L/3lc28qJERNBnBPKQva0FRWiUGWix693y4g/8ydpiw9Sdy
        IugY4iohZh37/ruH3y0yfO++TYdcpGgkkGIBFGQyhb/KixoZvq8PUJSPfl7KsEfJWi0t8Q7Ig2BdLf+1
        fNRd9TtaYUzkVPCvyMSFCaqeD7bzO0aGf+d7NFPa8gTACoTr/74tb/CiRga2GGyVtHYvZdhjOaIUDNnt
        KPU7loAQAz+crKFrJKH1E1kvhkPBxnfe4neNDP+uHeKBE6nJEkqDALbKM4Rv315a95clAEZLRSktChkL
        c8Bx/90Rh4YNb75Gmz4MHc8QM4WSVflIJgBcqcREFjnwM1fWsgXwzpu8qJGBQRMGTxhESRpWipgQUtSD
        xt6WceUg3LYUnGtWgeup9SzQWwv2e+6E2ksupJlFbJUU9CWz8pHoAnI6gucjeYtVmB9p65vTgl2ATAHg
        IpC5fCCYYp2fxwpl/pxSwphvp91B7U6lHT6UEsYqA1f/khHxSxF7MJzN9H0pL/XNt/VNspPmBYATJ5gB
        hCleUoZVCzE4xSylwA/f84JFhhcXhHBFsMUNA2MVAEPN7HOhqgdrsRKGVQuNuIzNeiW56xWejRtSuSKo
        bAFYb7xOzNtLtp9OIg3Z7aHmt/LzFRruWQHWPl2kbZh4KlsA7k0bxcUgtQqAxRmVbJiJu5XlwjV3Dp2H
        JGnDxFPZAgjZrGIQFW02UKksLaShrP/QQV6iyAiZjCCMKknlHgFlCwBhXTSPInnV9QLseXEGkFYCZcL/
        wXYxMzg1ASBS+QKo37xJTN1O0bAtYWRDUdy76HjgHl6S6MBDrelUNCn7JYfKF0BTIACW8RW0oKKmXsBY
        1JO5r0LK8pEL14KrwFacI22/5FD5AkA41z4ibgo5SWKo0ojPiYdV2O9awUsQHcGD39AJKXh6iKT9kkN1
        CADPCbSMGSpuu1K6K2C9lLGgOy1jBy0WXoLoaFz/CNThoZItdmNIMwSA8GzfRr0ATeMq2RUw34/PGWuW
        Eh4ehXsmJG2XPKpHAAjbzTeIAaFCXYFlZBktROEMptwcQASukKZ4P0CY6hIABIO0fIsZQLgJU6oS0kYm
        SjprsGeXmDaoIpxXzKKXVqXhqBiVCYDB/9OP4kGPuKqnFBHgMjSeHsZ6J++n8vYAhOHf9znYCrPSdUyM
        +gSA8Hy8CwwdWlHGcNpHBnhYVEEOTVk3yMx3PBaO86eI6/+pb/1IdQoA4dnxPh39gqlg6HslKyfJRDdk
        7J1JLb/+hef4k8mH9/WXwZrdJp1nBapXAAjv3s9p1zAuuKQku+cYougowSSrHTRuib1MTV4PvQVFGFKk
        C6A5wPRxjLrx/ADa3Ztsl8C6fExTw6HekQkV4DvwJX+S2OBedqO47Jve42LVL4Aw7PetFE8MZd0xZuEk
        XAhsfG8qKyJfj4s8tmV/gCa/n989Nnhf3Qx1nVqJiz6aOSo2yQJAYCKp7ab5lEaG6d50iOQw5hbidQ34
        O5zZ69uL8gpxFxLuI/B+GtspYMcicOALWvGjt4+mJ/A7li1LAGH49jMjL7qW5gzw/B/cYIrugbaZ40yi
        VGWHyT7H7+GePswexgMoMCehbu4lzdp9hMBX0tILrHHBB18mJWWn1LJlCiAMPKoNl5NrWeWhGHCOHtPB
        KUuYDSNRGDSSYH/xIElq5azS6UyC0kKomXMeuDY8DkGLmV+xGWDuwnH+ZHHjp3JeJ6dcAfg//5RWyBKF
        YG0t+L7aD43btoDriXX08gf049bFC8C29Eaw/+VP4Fq3hiJ67EFinc2LBufsmazyO7KgTxEtP0zlCgC/
        h74y+K0yXxIpF00OO71jmFo++vz0Bn3HU7kCwJO069qfQm/o9u+M/TRxJSDAhog4xXv0MGhlVT5SwQLY
        twdsQ4pop6wtvxs0PvEY/0Qd8L3xqvhae9zrP02xr5BVuADw/bsTK0AYMQjqup4BrkXXQKimmn9DmcAj
        5zC3H0/9xAOxFFz5SBUIAFOkeNeJrUko7w/eFzfxbykLvve3ggPffsZfba+AcX40qkQA+HsUwZRRNHdu
        7dWBXjQR2PMZ/3Z6EfzhEJ3uhUkdtKlDecHeyagiAYTJWxWOEOjY2XmXg3/XTv6r1CLw9QF6GaQwrK+4
        oZOVUQWt/liqUABhYlQ9dggdqYbr6W4WH+DGylAcx8TEAvTxXnwBxZIFrDcqFl//NnJQuhd14qWKBRAm
        Gh5PIGc9AlYG3qfh/pW0zVruiaTREPzpB/Bt+Tc0rn4QHOdOpK4ehSeMLlNrxYfZAgQQJvrcySNBGN6f
        llmpgoYWg/Oyi+hwau/m5+gNJf7dn9AMY6jaQpM0+I4BfGUdji6Chw5CYO9u8G1/l7Xy56nCXfMuo8AT
        u3i65uBCfi9V+PhobEECkKAwZjBdAysORWEr6k5xAyZi2CeVg+M3Y8FxzgT2dxxVKC3UsCAOF2vCFY6v
        chFGp+WFTqlgyxbAr4hr7+wZ0F0IY8qosikjhwVwwjD2F/+NXTomZ+L3UrdBM53UkAB0SlEXgMapC0Dj
        1AWgceoC0Dh1AWicugA0Tl0AGqcuAI1TF4DGqQtA49QFoHHqAtA4dQFonLoANE5dABqnLgCNUxeAxqkL
        QOPUBaBx6gLQOHUBaJy6ADROEoDUB4mnLgBFEgVgZsReILmcMNzFBOBiAsBXaFoZbRFoZQIQmABcTADS
        19OZAFaY/w/tcYpIqxv0JwAAAABJRU5ErkJggg==
</value>
  </data>
</root>